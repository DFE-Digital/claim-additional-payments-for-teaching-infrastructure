parameters:
  - name: subscription_identifier
    type: string
  - name: environment_id
    type: string
  - name: functionapp_name
    type: string
  - name: functionapp_key_name
    type: string
  - name: functionapp_resourcegroup
    type: string
  - name: keyvault_name
    type: string
  - name: keyvault_secret_name
    type: string
  - name: service_connection_name
    type: string
steps:
  - task: AzureCLI@2
    displayName: Add firewall rule to keyvault
    inputs:
      azureSubscription: "${{ parameters.service_connection_name }}"
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        # Setting Variables
        $MyIPAddress = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content.Trim() 
        $MyIPAddress | Out-File -FilePath ./agent.ip
        az keyvault network-rule add --name ${{ parameters.keyvault_name }} --ip-address $MyIPAddress

  - task: AzureKeyVault@1
    displayName: "Get the secrets from keyvault"
    inputs:
      azureSubscription: "${{ parameters.service_connection_name }}"
      KeyVaultName: "${{ parameters.keyvault_name }}"
      SecretsFilter: "DatabaseName,DatabaseServerName,DatabaseUsername,DatabasePassword,DQTApiKey,DQTFunctionAppKey,DQTRollbarAccessToken,DQTRollbarEnvironment, SFTPScheduleTriggerTime,SFTPHostName,SFTPUserName,SFTPPassword,SFTPSshHostKeyFingerprint,SFTPRemotePath,DQTBlobContainerName,SFTPPortNumber"
      RunAsPreJob: false

  - task: AzureCLI@2
    displayName: Assign key to function app
    inputs:
      azureSubscription: "${{ parameters.service_connection_name }}"
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        #Create/align Function App Host Key for Function App
        az functionapp keys set --resource-group ${{ parameters.functionapp_resourcegroup }} --name ${{ parameters.functionapp_name }} --key-name ${{ parameters.functionapp_key_name }} --key-type functionKeys --key-value $(DQTFunctionAppKey)

  - task: AzureAppServiceSettings@1
    displayName: "Update function app settings"
    inputs:
      azureSubscription: "${{ parameters.service_connection_name }}"
      appName: ${{ parameters.functionapp_name }}
      resourceGroupName: ${{ parameters.functionapp_resourcegroup }}
      appSettings: |
        [
          {
            "name": "DatabaseServerName",
            "value": "$(DatabaseServerName)",
            "slotSetting": false
          },
          {
            "name": "DatabaseName",
            "value": "$(DatabaseName)",
            "slotSetting": false
          },
          {
            "name": "DatabaseUsername",
            "value": "$(DatabaseUsername)@${{parameters.subscription_identifier}}${{parameters.environment_id}}-app-db",
            "slotSetting": false
          },          
          {
            "name": "DatabasePassword",
            "value": "$(DatabasePassword)",
            "slotSetting": false
          },
          {
            "name": "DQTApiKey",
            "value": "$(DQTApiKey)",
            "slotSetting": false
          },
          {
            "name": "DQTRollbarAccessToken",
            "value": "$(DQTRollbarAccessToken)",
            "slotSetting": false
          },
          {
            "name": "DQTRollbarEnvironment",
            "value": "$(DQTRollbarEnvironment)",
            "slotSetting": false
          },
          {
            "name": "SFTPScheduleTriggerTime",
            "value": "$(SFTPScheduleTriggerTime)",
            "slotSetting": false
          },
          {
            "name": "SFTPHostName",
            "value": "$(SFTPHostName)",
            "slotSetting": false            
          },
          {
            "name": "SFTPUserName",
            "value": "$(SFTPUserName)",
            "slotSetting": false
          },
          {
            "name": "SFTPPassword",
            "value": "$(SFTPPassword)",
            "slotSetting": false
          },
          {
            "name": "SFTPSshHostKeyFingerprint",
            "value": "$(SFTPSshHostKeyFingerprint)",
            "slotSetting": false
          },
          {
            "name": "SFTPRemotePath",
            "value": "$(SFTPRemotePath)",
            "slotSetting": false
          },
          {
            "name": "DQTBlobContainerName",
            "value": "$(DQTBlobContainerName)",
            "slotSetting": false
          },
          {
            "name": "SFTPPortNumber",
            "value": "$(SFTPPortNumber)",
            "slotSetting": false
          }
        ]

  - task: AzureCLI@2
    displayName: Remove firewall rules from keyvault
    inputs:
      azureSubscription: "${{ parameters.service_connection_name }}"
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        # Setting Variables
        $MyIPAddress = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content.Trim() 
        $MyIPAddress | Out-File -FilePath ./agent.ip
        az keyvault network-rule remove --name ${{ parameters.keyvault_name }} --ip-address $MyIPAddress
