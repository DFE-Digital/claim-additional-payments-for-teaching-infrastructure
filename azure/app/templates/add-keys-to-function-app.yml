parameters:
  - name: subscription_identifier
    type: string
  - name: environment_id
    type: string
  - name: functionapp_name
    type: string
  - name: functionapp_key_name
    type: string
  - name: functionapp_resourcegroup
    type: string
  - name: keyvault_name
    type: string
  - name: keyvault_secret_name
    type: string
  - name: service_connection_name
    type: string
steps:
  - task: AzurePowerShell@5
    displayName: "Install the Az Keyvault Module"
    inputs:
      azureSubscription: "${{ parameters.service_connection_name }}"
      ScriptType: "InlineScript"
      Inline: "Install-Module -Name Az.KeyVault -AllowClobber -force"
      azurePowerShellVersion: "LatestVersion"

  # - task: AzurePowerShell@5
  #   displayName: "Import the Az Keyvault Module"
  #   inputs:
  #     azureSubscription: "${{ parameters.service_connection_name }}"
  #     ScriptType: "InlineScript"
  #     Inline: "Import-Module Az.KeyVault"
  #     azurePowerShellVersion: "LatestVersion"

  - task: AzureCLI@2
    displayName: Add firewall rule to keyvault
    inputs:
      azureSubscription: "${{ parameters.service_connection_name }}"
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        # Setting Variables
        $MyIPAddress = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content.Trim() 
        $MyIPAddress | Out-File -FilePath ./agent.ip
        Import-Module Az.KeyVault -RequiredVersion 2.2.6
        Add-AzKeyVaultNetworkRule -VaultName ${{ parameters.keyvault_name }} -IpAddressRange $MyIPAddress

  - task: AzureKeyVault@1
    displayName: "Get the secrets from keyvault"
    inputs:
      azureSubscription: "${{ parameters.service_connection_name }}"
      KeyVaultName: "${{ parameters.keyvault_name }}"
      SecretsFilter: "DatabaseServerName,DatabaseName,DatabaseUsername,DatabasePassword,DQTApiKey,DQTFunctionAppKey"
      RunAsPreJob: false

  - task: AzureCLI@2
    displayName: Assign key to function app
    inputs:
      azureSubscription: "${{ parameters.service_connection_name }}"
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        #Create/align Function App Host Key for Function App
        az functionapp keys set --resource-group ${{ parameters.functionapp_resourcegroup }} --name ${{ parameters.functionapp_name }} --key-name ${{ parameters.functionapp_key_name }} --key-type functionKeys --key-value $(DQTFunctionAppKey)

  - task: AzureAppServiceSettings@1
    displayName: "Update function app settings"
    inputs:
      azureSubscription: "${{ parameters.service_connection_name }}"
      appName: ${{ parameters.functionapp_name }}
      resourceGroupName: ${{ parameters.functionapp_resourcegroup }}
      appSettings: |
        [
          {
            "name": "DatabaseServerName",
            "value": "$(DatabaseServerName)",
            "slotSetting": false
          },
          {
            "name": "DatabaseName",
            "value": "$(DatabaseName)",
            "slotSetting": false
          },
          {
            "name": "DatabaseUsername",
            "value": "$(DatabaseUsername)@${{parameters.subscription_identifier}}${{parameters.environment_id}}-app-db",
            "slotSetting": false
          },          
          {
            "name": "DatabasePassword",
            "value": "$(DatabasePassword)",
            "slotSetting": false
          },
          {
            "name": "DQTApiKey",
            "value": "$(DQTApiKey)"
          },
          {
            "name": "RollbarAccessToken",
            "value": "$(RollbarAccessToken)"
          },
          {
            "name": "RollbarEnvironemnt",
            "value": "$(RollbarEnvironemnt)"
          }
        ]

  - task: AzureCLI@2
    displayName: Remove firewall rules from keyvault
    inputs:
      azureSubscription: "${{ parameters.service_connection_name }}"
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        # Setting Variables
        $MyIPAddress = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content.Trim() 
        $MyIPAddress | Out-File -FilePath ./agent.ip
        Remove-AzKeyVaultNetworkRule -VaultName ${{ parameters.keyvault_name }} -IpAddressRange  $MyIPAddress
