parameters:
  - name: sln_artifact_name
    type: string
  - name: build_configuration
    type: string
  - name: project_path
    type: string
  - name: solution_path
    type: string
  - name: test_projects_path
    type: string
  - name: nuget_config_path
    type: string
  - name: vmImage
    type: string
    default: "windows-latest"

jobs:
  - job: job_build_and_publish_dotnetcore_project
    displayName: Build and publish dotnet core project
    pool:
      vmImage: ${{ parameters.vmImage }}

    steps:
      - task: DotNetCoreCLI@2
        displayName: dotnet restore
        inputs:
          command: restore
          projects: "${{parameters.project_path}}"
          nugetConfigPath: "${{parameters.nuget_config_path}}"
          feedsToUse: "config"
          includeNuGetOrg: true

      - script: |
          dotnet build ${{parameters.solution_path}} --configuration ${{parameters.build_configuration}}
      - task: DotNetCoreCLI@2
        displayName: run unit tests
        inputs:
          command: test
          projects: "${{parameters.test_projects_path}}"
          arguments: '--configuration ${{parameters.build_configuration}} /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --collect "Code Coverage"'

      - task: DotNetCoreCLI@2
        displayName: publish .net core
        inputs:
          command: "publish"
          publishWebProjects: false
          projects: "${{parameters.project_path}}"
          arguments: "--configuration ${{parameters.build_configuration}} --output $(build.artifactstagingdirectory)"
          zipAfterPublish: true

      - publish: $(build.artifactstagingdirectory)
        displayName: Publish dotnet core project
        artifact: "${{ parameters.sln_artifact_name }}"
