# specific path build
trigger:
  - none
  # branches:
  #   include:
  #   - master
  #   - feature/*
  # paths: 
  #   exclude:
  #   - README.md

parameters:
  - name: deployment_target
    displayName: Deploy
    type: string
    default: dev1
    values: 
    - development
    - production
    - none

variables:
  # Base configuration
  # Add OS naming convention variables here.
  - name: system_identifier
    value: s118
  - name: system_purpose
    value: 'teacherpaymentsservice'
  - name: sln_artifact_name
    value: 'drop-sln'
  - name: build_configuration
    value: 'Release'
 
stages:
- stage: stage_build
  displayName: 'Build and Publish'
  jobs:
  - template: templates/publish-solution.yml  
    parameters:  
      sln_artifact_name: '${{ variables.sln_artifact_name }}'
      build_configuration: '${{variables.build_configuration}}'
      project_path: 'solution/dqt.api/*.csproj' 
      solution_path: 'solution/claim-additional-payments-for-teaching-qts-api.sln'          
      test_projects_path: 'solution/*tests/*.csproj'
      nuget_config_path: 'solution/nuget.config'

- stage: stage_deploy_development
  displayName: 'Deploy development'
  condition: eq('${{ parameters.deployment_target}}', 'development')
  jobs: 
  - template: jobs/deploy-resources.yml
    parameters:
      service_connection_name: 'azdo.pipelines.cip.S118D.armfe1ef140-8bef-4043-b5ee-c449e6f951ef'
      subscription_identifier: 's118'
      subscription_purpose: 'teacherpaymentsservice-development'
      environment_id: 'd01'
      nuget_config_path: 'solution/nuget.config'
      connectionString_secretname: 'Values.DQTDbConnectionString'
      datalayer_project_directory: 'solution/dqt.datalayer'
      sln_artifact_name: 'drop-sln'
      vmImage: 'windows-latest'
      run_after: stage_build

  - job: addfirewall 
    displayName: Add Firewall Exception

    pool:
      # vmImage: ubuntu-default
      vmImage: "ubuntu-latest"

    steps:
    - task: AzurePowerShell@5
      displayName: 'Open KeyVault Firewall'
      inputs:
        azureSubscription: 'azdo.pipelines.cip.S118D.armfe1ef140-8bef-4043-b5ee-c449e6f951ef'
        ScriptType: 'InlineScript'
        Inline: |
          # Setting Variables
          $MyIPAddress = (Invoke-WebRequest -uri "http://ifconfig.me/ip").Content.Trim() 
          $MyIPAddress | Out-File -FilePath ./agent.ip
          $PostGres = Get-AzPostgreSqlServer -ResourceGroupName 's118d01-app'
          If ($null -eq $PostGres) {
              Write-Output "##vso[task.logissue type=warning;]There is no PostGres Server in RG s118d01-app"
              Exit 0
            }
          Write-Output 'Updating PostGres Firewall rules...'
          $PostGresFWRule = New-AzPostgreSqlFirewallRule -Name deployment_rule -ResourceGroupName 's118d01-app' -ServerName $PostGres.Name -EndIPAddress $MyIPAddress -StartIPAddress $MyIPAddress
          $LoopCount = 0
          Write-Output "Waiting for Access..." 
          # This will check every 5 seconds, up to a maximum of 30 seconds
          Do {
              $AccessAllowed = $PostGresFWRule | Get-AzPostgreSqlFirewallRule -ErrorAction SilentlyContinue
              $LoopCount++
              Start-Sleep -Seconds 5
          }
          While ($null -eq $AccessAllowed -and $LoopCount -lt 6)
        azurePowerShellVersion: 'LatestVersion'

    - task: AzurePowerShell@5
      displayName: 'Open KeyVault Firewall'  
      inputs:
        azureSubscription: 'azdo.pipelines.cip.S118D.armfe1ef140-8bef-4043-b5ee-c449e6f951ef'
        ScriptType: 'InlineScript'
        Inline: |
          # Setting Variables
          $PostGres = Get-AzPostgreSqlServer -ResourceGroupName 's118d01-app'
          If ($null -eq $PostGres) {
              Write-Output "##vso[task.logissue type=warning;]There is no PostGres Server in RG s118d01-app"
              Exit 0
              }
          Write-Output 'Removing Deployment PostGres Deployment Firewall rule...'
          Remove-AzPostgreSqlFirewallRule -Name deployment_rule -ResourceGroupName 's118d01-app' -ServerName $PostGres.Name
        azurePowerShellVersion: 'LatestVersion'
